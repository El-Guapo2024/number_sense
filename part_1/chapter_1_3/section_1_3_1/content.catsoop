<catsoop-section>1.3.1 Extending Foiling</catsoop-section>

You can extend the method of FOILing to quickly multiply two three-digit numbers in the form $cba \times dba$. The general objective is to treat the digits of $ba$ as one number, so after foiling you would get:

$$
\begin{align*}
\text{Ones/Tens:} &\quad (ba)^2 \\
\text{Hundreds/Thousands:} &\quad (c + d) \times (ba) \\
\text{Rest of Answer:} &\quad c \times d
\end{align*}
$$

Let's look at some examples:

$$
\begin{align*}
412 \times 612 &= \\
\text{Ones/Tens:} &\quad (12)^2 = 144 \\
\text{Hundreds/Thousands:} &\quad (4 + 6) \times 12 + 1 = 121 \\
\text{Rest of Answer:} &\quad 4 \times 6 + 1 = 25 \\
\text{Answer:} &\quad \boxed{252144}
\end{align*}
$$

By treating the last two digits as a single entity, you reduce the three-digit multiplication to a two-digit problem. The last two digits need not be the same in the two numbers (though usually they are). Let's look at an example where they're different:

$$
\begin{align*}
211 \times 808 &= \\
\text{Ones/Tens:} &\quad 08 \times 11 = 88 \\
\text{Hundreds/Thousands:} &\quad 08 \times 2 + 11 \times 8 = 104 \\
\text{Rest of Answer:} &\quad 2 \times 8 + 1 = 17 \\
\text{Answer:} &\quad \boxed{170488}
\end{align*}
$$

The method works best when the last two digits don't exceed 20 (after that, the multiplication becomes cumbersome). Another good area where this approach is useful is squaring three-digit numbers:

$$
\begin{align*}
606^2 = 606 \times 606 &= \\
\text{Ones/Tens:} &\quad 06 \times 06 = 36 \\
\text{Hundreds/Thousands:} &\quad 06 \times 6 + 6 \times 06 = 2 \times 6 \times 6 = 72 \\
\text{Rest of Answer:} &\quad 6 \times 6 = 36 \\
\text{Answer:} &\quad \boxed{367236}
\end{align*}
$$

To use this procedure for squaring, it helps to have squares of two-digit numbers memorized. For example:

$$
\begin{align*}
431^2 = 431 \times 431 &= \\
\text{Ones/Tens:} &\quad 31 \times 31 = 961 \\
\text{Hundreds/Thousands:} &\quad 31 \times 4 + 4 \times 31 + 9 = 2 \times 4 \times 31 + 9 = 257 \\
\text{Rest of Answer:} &\quad 4 \times 4 + 2 = 18 \\
\text{Answer:} &\quad \boxed{185761}
\end{align*}
$$

If you don't have $31^2$ memorized, you would have to calculate it in order to do the first step in the process (which is time-consuming). However, if you have it memorized, you can save time.

<catsoop-section>Problem Set 1.3.1</catsoop-section>

<question pythonliteral>
csq_prompt = 'What is $202^2$?<br/>'
csq_soln = 202**2
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $406 \times 406$?<br/>'
csq_soln = 406 * 406
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $503 \times 503$?<br/>'
csq_soln = 503 * 503
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $607^2$?<br/>'
csq_soln = 607**2
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $208^2$?<br/>'
csq_soln = 208**2
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $306^2$?<br/>'
csq_soln = 306**2
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $509 \times 509$?<br/>'
csq_soln = 509 * 509
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $804^2$?<br/>'
csq_soln = 804**2
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $324 \times 524$?<br/>'
csq_soln = 324 * 524
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $217 \times 817$?<br/>'
csq_soln = 217 * 817
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $512^2$?<br/>'
csq_soln = 512**2
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $623^2$?<br/>'
csq_soln = 623**2
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $405 \times 605$?<br/>'
csq_soln = 405 * 605
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $311 \times 811$?<br/>'
csq_soln = 311 * 811
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $422 \times 622$?<br/>'
csq_soln = 422 * 622
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $533 \times 533$?<br/>'
csq_soln = 533 * 533
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $644 \times 644$?<br/>'
csq_soln = 644 * 644
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $755 \times 755$?<br/>'
csq_soln = 755 * 755
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $866 \times 866$?<br/>'
csq_soln = 866 * 866
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>

<question pythonliteral>
csq_prompt = 'What is $977 \times 977$?<br/>'
csq_soln = 977 * 977
csq_check_function = lambda sub, sol: abs(sub - sol) <= 1e-3
</question>
